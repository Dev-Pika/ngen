import colorama
from colorama import *
import os
import sys
import time
import random
import string

os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
# a
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... /")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... -")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... \\")
time.sleep(0.1)
os.system("cls")
print("Loading libraries of NGen... |")
time.sleep(0.1)
os.system("cls")
print(Fore.MAGENTA + Style.BRIGHT+"                        ███╗   ██╗██╗████████╗██████╗  ██████╗"+Fore.CYAN + Style.BRIGHT+"  ██████╗ ███████╗███╗   ██╗")
print(Fore.MAGENTA + Style.BRIGHT+"                        ████╗  ██║██║╚══██╔══╝██╔══██╗██╔═══██"+Fore.CYAN + Style.BRIGHT+"╗██╔════╝ ██╔════╝████╗  ██║")
print(Fore.MAGENTA + Style.BRIGHT+"                        ██╔██╗ ██║██║   ██║   ██████╔╝██║   ██"+Fore.CYAN + Style.BRIGHT+"║██║  ███╗█████╗  ██╔██╗ ██║")
print(Fore.MAGENTA + Style.BRIGHT+"                        ██║╚██╗██║██║   ██║   ██╔══██╗██║   ██"+Fore.CYAN + Style.BRIGHT+"║██║   ██║██╔══╝  ██║╚██╗██║")
print(Fore.MAGENTA + Style.BRIGHT+"                        ██║ ╚████║██║   ██║   ██║  ██║╚██████╔"+Fore.CYAN + Style.BRIGHT+"╝╚██████╔╝███████╗██║ ╚████║")
print(Fore.MAGENTA + Style.BRIGHT+"                        ╚═╝  ╚═══╝╚═╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝"+Fore.CYAN + Style.BRIGHT+"  ╚═════╝ ╚══════╝╚═╝  ╚═══╝")

print(Fore.YELLOW + Style.BRIGHT)
print()
print("Select Your Option:")
print()
print(Fore.GREEN + Style.BRIGHT)
print("[1] Unchecked Nitro Generator")
print("[2] Cancel")
print()
selection = input(Fore.RED + Style.BRIGHT+"root"+Fore.YELLOW + Style.NORMAL+"@"+Fore.BLUE + Style.BRIGHT+"ngendsc~"+Fore.WHITE)

if (selection == "1"):
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... +")
    time.sleep(0.1)
    os.system("cls")
    print(Fore.GREEN + Style.BRIGHT)
    print("Starting services... x")
    time.sleep(0.1)
    os.system("cls")

    def get_random_string(length):
        letters = string.ascii_lowercase
        result_str = ''.join(random.choice(letters) for i in range(length))
        print(Fore.WHITE+"Discord Unchecked Nitro Code Is:", Fore.GREEN + Style.BRIGHT+"https://discord.gift/"+result_str)
        print(Fore.RED + Style.BRIGHT+"The terminal will clear in 20 seconds")
        print()
        print()
        print(Fore.BLUE + Style.BRIGHT+"Developed By ElPikachu S.L (https://github.com/ElPikachu-SL/)'s Head Developer (https://github.com/dev-pika)")
    get_random_string(9)
    time.sleep(20)
    os.system("cls")
    print(Fore.WHITE)
    print("Thanks for using! REMEMBER, these codes are unchecked. It\'s very hard to find some working code.")

if (selection == "2"):
    print(Fore.MAGENTA + Style.BRIGHT+"███╗   ██╗██╗████████╗██████╗  ██████╗"+Fore.CYAN + Style.BRIGHT+"  ██████╗ ███████╗███╗   ██╗")
    print(Fore.MAGENTA + Style.BRIGHT+"████╗  ██║██║╚══██╔══╝██╔══██╗██╔═══██"+Fore.CYAN + Style.BRIGHT+"╗██╔════╝ ██╔════╝████╗  ██║")
    print(Fore.MAGENTA + Style.BRIGHT+"██╔██╗ ██║██║   ██║   ██████╔╝██║   ██"+Fore.CYAN + Style.BRIGHT+"║██║  ███╗█████╗  ██╔██╗ ██║")
    print(Fore.MAGENTA + Style.BRIGHT+"██║╚██╗██║██║   ██║   ██╔══██╗██║   ██"+Fore.CYAN + Style.BRIGHT+"║██║   ██║██╔══╝  ██║╚██╗██║")
    print(Fore.MAGENTA + Style.BRIGHT+"██║ ╚████║██║   ██║   ██║  ██║╚██████╔"+Fore.CYAN + Style.BRIGHT+"╝╚██████╔╝███████╗██║ ╚████║")
    print(Fore.MAGENTA + Style.BRIGHT+"╚═╝  ╚═══╝╚═╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝"+Fore.CYAN + Style.BRIGHT+"  ╚═════╝ ╚══════╝╚═╝  ╚═══╝")
    print()
    print(Fore.BLUE + Style.BRIGHT)
    print("Developed By ElPikachu S.L (https://github.com/ElPikachu-SL/)'s Head Developer (https://github.com/dev-pika)")
    print()
    print(Fore.WHITE)
